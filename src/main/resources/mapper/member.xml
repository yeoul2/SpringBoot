<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.back.dao.UserDao">

    <!-- 사용자 아이디(user_id)로 찾기 -->
    <!-- <select id="findByUsername" parameterType="string" resultType="com.example.back.model.User"> -->
    <select id="findByUsername" parameterType="java.lang.String" resultType="com.example.back.model.User">
        SELECT user_no, user_name, user_email, user_id, user_pw, user_birth, role
        FROM users
        WHERE user_id = #{user_id}
    </select>

    <!-- 사용자 이메일(user_email)로 찾기  구글계정 or 네이버 계정을 위해 추가함 --> 
    <select id="findByEmail" parameterType="java.lang.String" resultType="com.example.back.model.User">
    SELECT user_no, user_name, user_email, user_id, user_pw, user_birth, role
    FROM users
    WHERE user_email = #{email}
    LIMIT 1
    </select>

    <!-- 아이디 중복 확인 (COUNT 사용) ✅ -->
    <select id="countByUserId" parameterType="java.lang.String" resultType="int">
        SELECT COUNT(*) FROM users WHERE user_id = #{user_id}
    </select>


    <!-- 회원가입 (SignupRequest 사용) -->
    <insert id="userInsert" parameterType="com.example.back.model.SignupRequest">
    INSERT INTO users (user_name, user_email, user_id, user_pw, user_birth, role)
    VALUES (#{user_name}, #{user_email}, #{user_id}, #{user_pw}, 
    <!-- 해당 값이 null일경우 null추가, 아니면 값을 추가 구글의 경우 생년월일 값을 가져오지 못하므로 null 표시 -->
            <if test="user_birth != null">#{user_birth}</if> 
            <if test="user_birth == null">NULL</if>,
            #{role})
    </insert>

    <!-- 🔹 이메일 인증 코드 저장 (덮어쓰기) -->
    <insert id="insertVerificationCode" parameterType="map">
        INSERT INTO user_email_verification (user_email, code, expired)
        VALUES (#{user_email}, #{code}, false)
        ON DUPLICATE KEY UPDATE code = #{code}, expired = false, created_at = CURRENT_TIMESTAMP;
    </insert>

    <!-- 🔹 이메일 인증 코드 조회 -->
    <select id="findVerificationCodeByEmail" parameterType="java.lang.String" resultType="java.lang.String">
        SELECT code FROM user_email_verification WHERE user_email = #{user_email} AND expired = false;
    </select>

    <!-- 이메일 존재 여부 확인 -->
    <select id="countByEmail" parameterType="java.lang.String" resultType="int">
    SELECT COUNT(*) FROM users WHERE user_email = #{email}
    </select>

    <!-- 소셜 로그인의 경우 SNS로 들어와야함 -->
    <update id="updateRoleByEmail" parameterType="com.example.back.model.User">
    UPDATE users
    SET role = #{role}
    WHERE user_email = #{user_email}
    </update>

</mapper>
